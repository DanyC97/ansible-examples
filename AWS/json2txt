#!/usr/bin/env python

import sys,json
import getopt
import pprint
from jinja2 import Environment, FileSystemLoader, Undefined, StrictUndefined, make_logging_undefined

def getOptions():
  try:
    options, args = getopt.getopt(sys.argv[1:], "n:sw", ["notrim", "strict", "warning"])
  except getopt.GetoptError as err:
    # print help information and exit:
    print str(err)  # will print something like "option -a not recognized"
    sys.exit(2)

  global yamlfile,jinjafile,trim,undefined
  trim = True
  opts = 0

  for opt,arg in options:
    opts = opts + 1
    if opt in ("-n","-notrim"):
      trim = False
    elif opt in ("-w","-warning"):
      undefined = make_logging_undefined (base = Undefined)
    elif opt in ("-s","-strict"):
      undefined = make_logging_undefined (base = StrictUndefined)

  return opts > 0

trim = True
undefined = Undefined

getOptions()
ENV = Environment(loader=FileSystemLoader('.'),trim_blocks=trim,lstrip_blocks=trim,undefined=undefined)

if (len(sys.argv) < 2):
  print "Usage: json2txt j2-filter-spec"
  sys.exit()

jinjafile = sys.argv[1]
if (jinjafile.find('.') == -1):
  jinjafile = jinjafile + '.j2'

data = json.load(sys.stdin)

# pprint.pprint(data)
template = ENV.get_template(jinjafile)
print(template.render(**data))
